import{a as Q}from"./chunk-HDBGLD52.js";import{b as J,c as Z,d as ee}from"./chunk-BM7DUPOK.js";import"./chunk-R7WH3GYF.js";import"./chunk-JCJIXIGU.js";import{a as K}from"./chunk-MVPRFZGE.js";import{a as G}from"./chunk-HE5QXQ2G.js";import{e as w}from"./chunk-UFL4XQUW.js";import"./chunk-OJYR24EB.js";import"./chunk-A3A72ILT.js";import{a as z}from"./chunk-TVMSW2JO.js";import"./chunk-CUKNIT7M.js";import{a as W}from"./chunk-AY56TXUB.js";import"./chunk-VMH4ILIM.js";import"./chunk-6AWQUBPH.js";import"./chunk-HZKDOO2A.js";import"./chunk-JLIX64RS.js";import{c as R}from"./chunk-VORQTW3B.js";import"./chunk-FVBRAVME.js";import"./chunk-L2D7AHNW.js";import"./chunk-POHCU53O.js";import{a as U,e as V}from"./chunk-6QI4QBU5.js";import"./chunk-DXFFT4B6.js";import"./chunk-UJ255QIO.js";import"./chunk-MXV4M2BO.js";import"./chunk-4N6BO7AP.js";import{b as j}from"./chunk-RU375CWH.js";import"./chunk-KXJUWRJT.js";import"./chunk-EMZRNCIP.js";import"./chunk-DKHW3YWA.js";import{t as A}from"./chunk-2T5SWUVG.js";import{Ab as Y,Bb as M,Cb as q,Db as _,Eb as L,Ib as F,Nb as k,Pb as f,Wa as h,Xa as P,Zb as N,f as I,gc as $,ha as T,jc as O,mb as B,qa as v,ra as S,rb as x,xb as D,zc as H}from"./chunk-NSU275EB.js";import{a as y,b,g as X}from"./chunk-ODN5LVDJ.js";Z();var ve=X(ee());var re=(m,g)=>g.semester,te=(m,g)=>({program:m,yearLevel:g});function oe(m,g){if(m&1){let e=F();q(0,"div",3)(1,"button",5),k("click",function(){v(e);let r=f();return S(r.cancelPreview())}),N(2,"Cancel Preview"),_(),L(3,"iframe",6),_()}}function ie(m,g){m&1&&L(0,"app-loading")}function se(m,g){if(m&1){let e=F();q(0,"div",8)(1,"app-table-generic",9),k("tableHeadingButtonClick",function(){let r=v(e).$implicit,o=f(2);return S(o.onAddCourse(r))})("edit",function(r){let o=v(e).$implicit,n=f(2);return S(n.onEditCourse(r,o))})("delete",function(r){v(e);let o=f(2);return S(o.onDeleteCourse(r))}),_()()}if(m&2){let e=g.$implicit,t=f(2);x("@pageFloatUpAnimation",void 0),h(),x("columns",t.columns)("data",e.courses)("tableName","course/s")("displayedColumns",t.displayedColumns)("showTableHeading",!0)("tableHeadingTitle",t.getSemesterDisplay(e.semester))("tableHeadingButtonText","Add Course")("tableHeadingButtonIcon","add")}}function ae(m,g){if(m&1&&(q(0,"div",4)(1,"div",7),Y(2,se,2,9,"div",8,re),_()()),m&2){let e=f();h(2),M(e.selectedSemesters)}}var Se=(()=>{class m{route;curriculumService;dialog;snackBar;cdr;selectedPrograms=[];curriculum;selectedProgram="";selectedYear=1;selectedSemesters=[];customExportOptions=null;destroy$=new I;isLoading=!0;headerInputFields=[{type:"select",label:"Program",key:"program",options:[]},{type:"select",label:"Year Level",key:"yearLevel",options:[]}];columns=[{key:"index",label:"#"},{key:"course_code",label:"Course Code"},{key:"pre_req",label:"Pre-req"},{key:"co_req",label:"Co-req"},{key:"course_title",label:"Course Title"},{key:"lec_hours",label:"Lec Hours"},{key:"lab_hours",label:"Lab Hours"},{key:"units",label:"Units"},{key:"tuition_hours",label:"Tuition Hours"}];displayedColumns=["index","course_code","pre_req","co_req","course_title","lec_hours","lab_hours","units","tuition_hours","action"];constructor(e,t,r,o,n){this.route=e,this.curriculumService=t,this.dialog=r,this.snackBar=o,this.cdr=n}ngOnInit(){let e=this.route.snapshot.paramMap.get("year");e&&this.fetchCurriculum(e),this.fetchAllPrograms()}fetchAllPrograms(){this.isLoading=!0,this.curriculumService.getAllPrograms().subscribe({next:e=>{this.updateProgramDropdown(e.map(t=>t.program_code)),this.isLoading=!1},error:e=>{console.error("Error fetching programs:",e),this.snackBar.open("Error fetching programs. Please try again.","Close",{duration:3e3}),this.isLoading=!1}})}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete()}fetchCurriculum(e,t,r){this.isLoading=!0,this.curriculumService.getCurriculumByYear(e).subscribe({next:o=>{o&&(console.log("Full Curriculum Object:",o),this.curriculum=o,this.selectedProgram=t||o.programs[0]?.name||"",this.selectedYear=r||1,this.curriculumService.getProgramsByCurriculumYear(e).subscribe({next:n=>{this.selectedPrograms=n.map(i=>i.program_code),this.updateHeaderInputFields(),this.updateProgramDropdown(this.selectedPrograms),this.updateSelectedSemesters(),this.updateCustomExportOptions()},error:n=>{console.error("Error fetching associated programs:",n),this.snackBar.open("Error fetching associated programs. Please try again.","Close",{duration:3e3})}}),this.cdr.markForCheck(),this.isLoading=!1)},error:o=>{console.error("Error fetching curriculum:",o),this.snackBar.open("Error fetching curriculum. Please try again.","Close",{duration:3e3}),this.isLoading=!1}})}updateHeaderInputFields(){let e=this.getProgram(),t=e?Array.from({length:e.number_of_years},(r,o)=>o+1):[];this.headerInputFields=[{type:"select",label:"Program",key:"program",options:this.selectedPrograms},{type:"select",label:"Year Level",key:"yearLevel",options:t}],this.cdr.markForCheck()}updateSelectedSemesters(){if(this.curriculum){console.log("Updating selected semesters for program:",this.selectedProgram);let e=this.getProgram();if(e){let t=e.year_levels.find(r=>r.year===this.selectedYear);t?(console.log("Year level found:",t),this.selectedSemesters=t.semesters.map(r=>b(y({},r),{courses:r.courses.map(o=>{let n=o.prerequisites?.length?o.prerequisites.map(s=>s.course_title).join(", "):"None",i=o.corequisites?.length?o.corequisites.map(s=>s.course_title).join(", "):"None";return console.log(`Course: ${o.course_code}, Pre-req: ${n}, Co-req: ${i}`),b(y({},o),{pre_req:n,co_req:i})})})),this.cdr.detectChanges()):(console.log("No year level found for year:",this.selectedYear),this.selectedSemesters=[]),this.cdr.detectChanges()}else console.log("Program not found:",this.selectedProgram)}}onInputChange(e){if(console.log("Input Change Detected:",e),e.program!==void 0&&(this.selectedProgram=e.program,this.updateHeaderInputFields(),this.updateCustomExportOptions(),console.log("Updated selectedProgram:",this.selectedProgram)),e.yearLevel!==void 0&&(this.selectedYear=e.yearLevel,console.log("Updated selectedYear:",this.selectedYear)),this.selectedProgram&&this.selectedYear){let t=this.getProgram();if(t){let r=this.getYearLevel(t);r?(console.log("Fetched Year Level ID:",r.year_level_id),this.fetchCoursesForSelectedProgram(this.selectedProgram)):(console.log("Year level not found for selected year:",this.selectedYear),this.selectedSemesters=[])}else console.log("Program not found for selected program:",this.selectedProgram),this.selectedSemesters=[]}else console.log("Both selectedProgram and selectedYear are required to update semesters."),this.selectedSemesters=[];this.cdr.markForCheck()}onEditCourse(e,t){let r=this.curriculum?.programs.flatMap(i=>i.year_levels).flatMap(i=>i.semesters).flatMap(i=>i.courses).map(i=>`${i.course_code} - ${i.course_title}`)||[],o=this.getCourseDialogConfig(e);this.dialog.open(w,{data:o,disableClose:!0}).afterClosed().subscribe(i=>{if(i){let s=this.getProgram();if(!s){this.snackBar.open("Error: Selected program not found.","Close",{duration:3e3});return}let p=this.getCourseIdByTitle(i.pre_req),l=this.getCourseIdByTitle(i.co_req),d={course_code:i.course_code,course_title:i.course_title,lec_hours:i.lec_hours,lab_hours:i.lab_hours,units:i.units,tuition_hours:i.tuition_hours,curriculum_id:this.curriculum?.curriculum_id,semester_id:t.semester_id,year_level_id:this.getYearLevel(s)?.year_level_id,curricula_program_id:s.curricula_program_id,requirements:[{requirement_type:"pre",required_course_id:p},{requirement_type:"co",required_course_id:l}].filter(u=>u.required_course_id)},a=this.selectedProgram,c=this.selectedYear;this.curriculumService.updateCourse(e.course_id,d).subscribe({next:u=>{this.snackBar.open("Course updated successfully","Close",{duration:3e3}),this.fetchCurriculum(this.curriculum.curriculum_year,a,c),this.cdr.detectChanges()},error:u=>{console.error("Error updating course:",u),this.snackBar.open("Error updating course. Please try again.","Close",{duration:3e3})}})}})}onDeleteCourse(e){let t=this.selectedProgram,r=this.selectedYear;this.curriculumService.deleteCourse(e.course_id).subscribe({next:()=>{this.snackBar.open("Course deleted successfully","Close",{duration:3e3}),this.fetchCurriculum(this.curriculum.curriculum_year,t,r)},error:o=>{console.error("Error deleting course:",o),this.snackBar.open("Error deleting course. Please try again.","Close",{duration:3e3})}})}onAddCourse(e){if(!this.curriculum){this.snackBar.open("Error: No curriculum loaded.","Close",{duration:3e3});return}let t=this.curriculum.curriculum_id,r=this.getProgram();if(!r){this.snackBar.open("Error: Selected program not found.","Close",{duration:3e3});return}let o=r.curricula_program_id,n=this.getYearLevel(r);if(!t||!o||!n){this.snackBar.open("Error: Missing curriculum, program, or year level information.","Close",{duration:3e3});return}let i=e.semester_id,s=this.selectedProgram,p=this.selectedYear;console.log("Fetched Curriculum ID:",t),console.log("Fetched Program ID:",o),console.log("Fetched Year Level ID:",n.year_level_id),console.log("Fetched Semester ID:",i);let l=this.getCourseDialogConfig(void 0,e.semester);this.dialog.open(w,{data:l,disableClose:!0}).afterClosed().subscribe(a=>{if(a){let c=this.getCourseIdByTitle(a.pre_req),u=this.getCourseIdByTitle(a.co_req),E={course_code:a.course_code,course_title:a.course_title,lec_hours:a.lec_hours,lab_hours:a.lab_hours,units:a.units,tuition_hours:a.tuition_hours,curriculum_id:t,semester_id:i,year_level_id:n.year_level_id,curricula_program_id:o,requirements:[{requirement_type:"pre",required_course_id:c},{requirement_type:"co",required_course_id:u}].filter(C=>C.required_course_id)};this.curriculumService.addCourse(E).subscribe({next:C=>{this.snackBar.open("Course added successfully","Close",{duration:3e3}),this.fetchCurriculum(this.curriculum.curriculum_year,s,p),this.cdr.detectChanges()},error:C=>{console.error("Error adding course:",C),this.snackBar.open("Error adding course. Please try again.","Close",{duration:3e3})}})}})}getCourseIdByTitle(e){return this.curriculum?.programs.flatMap(r=>r.year_levels).flatMap(r=>r.semesters).flatMap(r=>r.courses).find(r=>`${r.course_code} - ${r.course_title}`===e)?.course_id}onManagePrograms(){let e=this.curriculum?.curriculum_year;e&&this.curriculumService.getProgramsByCurriculumYear(e).subscribe({next:t=>{this.curriculumService.getAllPrograms().subscribe({next:r=>{let o={title:"Manage Programs",isEdit:!1,fields:r.map(i=>({label:`${i.program_code} - ${i.program_title}`,formControlName:i.program_code,type:"checkbox",required:!1,checked:t.some(s=>s.program_id===i.program_id)})),initialValue:r.reduce((i,s)=>(i[s.program_code]=t.some(p=>p.program_id===s.program_id),i),{})};this.dialog.open(w,{data:o}).afterClosed().subscribe(i=>{i&&(t.filter(l=>!i[l.program_code]).forEach(l=>{this.curriculumService.removeProgramFromCurriculum(e,l.program_id).subscribe({next:()=>{this.snackBar.open(`${l.program_code} removed from curriculum year ${e}`,"Close",{duration:3e3})},error:d=>{console.error("Error removing program:",d),this.snackBar.open("Error removing program. Please try again.","Close",{duration:3e3})}})}),r.filter(l=>i[l.program_code]&&!t.some(d=>d.program_id===l.program_id)).forEach(l=>{this.curriculumService.addProgramToCurriculum(e,l.program_id).subscribe({next:d=>{if(d&&d.data){let a=d.data,c=this.curriculum?.programs?.findIndex(u=>u.program_id===a.program_id);this.curriculum&&(c!==void 0&&c!==-1?this.curriculum.programs[c]=a:this.curriculum.programs.push(a),this.fetchCurriculum(e),this.updateProgramDropdown(this.curriculum.programs.map(u=>u.name)),this.snackBar.open(`${l.program_code} added to curriculum year ${e}`,"Close",{duration:3e3}),this.cdr.detectChanges())}},error:d=>{console.error("Error adding program:",d),this.snackBar.open("Error adding program. Please try again.","Close",{duration:3e3})}})}),this.selectedPrograms=Object.keys(i).filter(l=>i[l]),this.updateProgramDropdown(this.selectedPrograms),this.selectedPrograms.includes(this.selectedProgram)||(this.selectedProgram=""),this.selectedSemesters=[],this.cdr.detectChanges())})},error:r=>{console.error("Error fetching programs:",r),this.snackBar.open("Error fetching programs. Please try again.","Close",{duration:3e3})}})},error:t=>{console.error("Error fetching associated programs:",t),this.snackBar.open("Error fetching associated programs. Please try again.","Close",{duration:3e3})}})}fetchCoursesForSelectedProgram(e){this.selectedSemesters=[];let t=this.curriculum?.programs.find(r=>r.name===e);if(t){let r=t.year_levels.find(i=>i.year===this.selectedYear),o=[1,2,3],n={};o.forEach(i=>{let s=r?.semesters.find(p=>p.semester===i);n[i]=s?b(y({},s),{courses:s.courses.map(p=>this.populateCourseRequisites(p))}):{semester:i,courses:[],semester_id:0},console.log(`Semester ${i} courses:`,n[i].courses)}),this.selectedSemesters=Object.values(n)}else this.selectedSemesters=[1,2,3].map(r=>({semester_id:0,semester:r,courses:[]}));this.cdr.detectChanges()}populateCourseRequisites(e){let t=e.prerequisites?.length?e.prerequisites.map(o=>o.course_title).join(", "):"None",r=e.corequisites?.length?e.corequisites.map(o=>o.course_title).join(", "):"None";return console.log(`Course: ${e.course_code}, Pre-req: ${t}, Co-req: ${r}`),b(y({},e),{pre_req:t,co_req:r})}updateProgramDropdown(e){this.headerInputFields=this.headerInputFields.map(t=>t.key==="program"?b(y({},t),{options:e}):t),this.cdr.markForCheck()}updateCurriculumPrograms(e){if(!this.curriculum)return;let t=Object.keys(e).filter(r=>e[r]);this.curriculum.programs=this.curriculum.programs.filter(r=>t.includes(r.name)),this.updateProgramDropdown(t),this.updateSelectedSemesters()}getCourseDialogConfig(e,t){let r=this.curriculum?.programs.flatMap(o=>o.year_levels).flatMap(o=>o.semesters).flatMap(o=>o.courses).map(o=>`${o.course_code} - ${o.course_title}`)||[];return{title:e?"Edit Course":"Add Course",isEdit:!!e,fields:[{label:"Course Code",formControlName:"course_code",type:"text",maxLength:10,required:!0},{label:"Pre-requisite",formControlName:"pre_req",type:"select",options:r,required:!1},{label:"Co-requisite",formControlName:"co_req",type:"select",options:r,required:!1},{label:"Course Title",formControlName:"course_title",type:"text",maxLength:80,required:!0},{label:"Lecture Hours",formControlName:"lec_hours",type:"number",min:0,maxLength:2,required:!0},{label:"Laboratory Hours",formControlName:"lab_hours",type:"number",min:0,maxLength:2,required:!0},{label:"Units",formControlName:"units",type:"number",min:0,maxLength:2,required:!0},{label:"Tuition Hours",formControlName:"tuition_hours",type:"number",min:0,maxLength:2,required:!0}],initialValue:e||{semester:t}}}getProgramId(e){return this.curriculum?.programs?.find(r=>r.name===e)?.curricula_program_id}getProgram(){let e=this.selectedProgram.trim().toLowerCase(),t=this.curriculum?.programs?.find(r=>r.name.trim().toLowerCase()===e);return t||console.error("Program not found:",this.selectedProgram),t}getYearLevel(e){return e?.year_levels.find(t=>t.year===this.selectedYear)}getSemesterDisplay(e){return this.curriculumService.mapSemesterToEnum(e)}trackBySemester(e,t){return t.semester}showPreview=!1;updateCustomExportOptions(){this.customExportOptions={all:"Export entire curriculum",current:`Export ${this.selectedProgram} program curriculum`},this.cdr.detectChanges()}onExport(e){e==="all"?this.generatePDF(!0,!0):e==="current"&&this.generatePDF(!0,!1)}generatePDF(e=!1,t=!1){let r=new J("p","mm","letter"),o=r.internal.pageSize.width,n=10,i=15,s=i;if(r.addImage("https://iantuquib.weebly.com/uploads/5/9/7/7/59776029/2881282_orig.png","PNG",n,5,22,22),r.setFontSize(12),r.setFont("times","bold"),r.text("POLYTECHNIC UNIVERSITY OF THE PHILIPPINES \u2013 TAGUIG BRANCH",o/2,s,{align:"center"}),s+=5,r.setFontSize(8),r.text("Gen. Santos Ave. Upper Bicutan, Taguig City",o/2,s,{align:"center"}),s+=10,this.curriculum){r.setFont("helvetica","bold"),r.setFontSize(17);let a=`${this.curriculum.curriculum_year} Curriculum`;r.text(a,o/2,s,{align:"center"}),s+=7}else{console.error("No curriculum data available");return}if(r.setDrawColor(0,0,0),r.setLineWidth(.5),r.line(n,s,o-n,s),s+=8,t)for(let a of this.curriculum.programs||[])this.addProgramToPDF(r,a,s),r.addPage(),s=i;else{let a=this.getProgram();if(a)this.addProgramToPDF(r,a,s);else{console.error("No current program available for export");return}}let l=r.output("blob"),d=URL.createObjectURL(l);e?(this.showPreview=!0,setTimeout(()=>{let a=document.getElementById("pdfPreview");a?a.src=d:console.error("PDF preview iframe not found")},0)):r.save("curriculum_report.pdf")}addProgramToPDF(e,t,r){let o=r,n=e.internal.pageSize.width,i=10;if(!t||!t.year_levels||t.year_levels.length===0){console.warn("No valid program or year levels found");return}let s=t.year_levels.sort((p,l)=>p.year-l.year);for(let p of s){let l=!1;for(let d of p.semesters)if(d.courses.map(c=>[c.course_code||"N/A",c.pre_req||"None",c.co_req||"None",c.course_title||"N/A",c.lec_hours?.toString()||"0",c.lab_hours?.toString()||"0",c.units?.toString()||"0",c.tuition_hours?.toString()||"0"]).length>0){l=!0;break}if(l){e.setFont("helvetica","bold"),e.setFontSize(15),e.text(`${t.name} - ${p.year}`,10,o),o+=7;let d=p.semesters.sort((a,c)=>a.semester-c.semester);for(let a of d){let c=a.courses.map(u=>[u.course_code||"N/A",u.pre_req||"None",u.co_req||"None",u.course_title||"N/A",u.lec_hours?.toString()||"0",u.lab_hours?.toString()||"0",u.units?.toString()||"0",u.tuition_hours?.toString()||"0"]);if(c.length>0){e.setFont("helvetica","bold"),e.setFontSize(13);let u=this.getSemesterDisplay(a.semester);e.text(u,i,o),o+=7;let E=e.internal.pageSize.width-20,C=this.calculateColumnWidths(E);e.autoTable({startY:o,head:[["Code","Pre-req","Co-req","Title","Lec","Lab","Units","Tuition"]],body:c,theme:"grid",headStyles:{fillColor:[128,0,0],textColor:[255,255,255],fontSize:9,halign:"center"},bodyStyles:{fontSize:10,textColor:[0,0,0]},styles:{lineWidth:.1,overflow:"linebreak",cellPadding:1},columnStyles:C,margin:{left:10,right:10}}),o=e.lastAutoTable.finalY+10,o>e.internal.pageSize.height-40&&(e.addPage(),o=r)}}}}}calculateColumnWidths(e){return{0:{cellWidth:15},1:{cellWidth:40},2:{cellWidth:40},3:{cellWidth:50},4:{cellWidth:15},5:{cellWidth:15},6:{cellWidth:10},7:{cellWidth:15}}}cancelPreview(){this.showPreview=!1}static \u0275fac=function(t){return new(t||m)(P(j),P(K),P(R),P(z),P(H))};static \u0275cmp=T({type:m,selectors:[["app-curriculum-detail"]],standalone:!0,features:[$],decls:6,vars:12,consts:[[1,"curriculum-detail-container"],[1,"curriculum-header-container"],[3,"export","inputChange","add","inputFields","addButtonLabel","addIconName","showExportDialog","customExportOptions","selectedValues"],[1,"pdf-preview-container"],[1,"curriculum-semesters-container"],["mat-button","",3,"click"],["id","pdfPreview","width","100%","height","600px"],[1,"scrollable-content"],[1,"semester-container"],[3,"tableHeadingButtonClick","edit","delete","columns","data","tableName","displayedColumns","showTableHeading","tableHeadingTitle","tableHeadingButtonText","tableHeadingButtonIcon"]],template:function(t,r){t&1&&(q(0,"div",0)(1,"div",1)(2,"app-table-header",2),k("export",function(n){return r.onExport(n)})("inputChange",function(n){return r.onInputChange(n)})("add",function(){return r.onManagePrograms()}),_()(),B(3,oe,4,0,"div",3)(4,ie,1,0,"app-loading")(5,ae,4,0,"div",4),_()),t&2&&(h(),x("@fadeAnimation",void 0),h(),x("inputFields",r.headerInputFields)("addButtonLabel","Manage Programs")("addIconName","apps")("showExportDialog",!0)("customExportOptions",r.customExportOptions)("selectedValues",O(9,te,r.selectedProgram,r.selectedYear)),h(),D(r.showPreview?3:-1),h(),D(r.isLoading?4:5))},dependencies:[A,Q,G,W],styles:[".curriculum-detail-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:stretch;justify-content:flex-start;gap:0;height:100%;overflow:hidden}.curriculum-header-container[_ngcontent-%COMP%]{position:sticky;top:0;z-index:3}.curriculum-semesters-container[_ngcontent-%COMP%]{transition:background-color .3s ease;height:100%;overflow:hidden;position:relative}.curriculum-semesters-container[_ngcontent-%COMP%]   .scrollable-content[_ngcontent-%COMP%]{position:absolute;inset:0;overflow:auto;display:flex;flex-direction:column;align-items:stretch;justify-content:flex-start;gap:var(--spacing-md);-ms-overflow-style:none;scrollbar-width:none}.curriculum-semesters-container[_ngcontent-%COMP%]   .scrollable-content[_ngcontent-%COMP%]::-webkit-scrollbar{display:none}.curriculum-semesters-container[_ngcontent-%COMP%]   .semester-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:none;justify-content:none;gap:0;-ms-overflow-style:none;scrollbar-width:none;flex:1;position:relative;border-radius:var(--border-radius-md)}.curriculum-semesters-container[_ngcontent-%COMP%]   .semester-container[_ngcontent-%COMP%]::-webkit-scrollbar{display:none}"],data:{animation:[U,V]}})}return m})();export{Se as CurriculumDetailComponent};
